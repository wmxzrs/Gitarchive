/* css document */
* {
    /* 页面初始化为内外边距为零 */
    margin: 0;
    padding: 0;
}
body {
    /* 宽度占浏览器的可视宽度的高度 */
    width: 100vm;
    background-color: #f2f2f2f2;

}

li {
    /* 清楚li元素的项目符号 */
    list-style: none;

}
a {
    text-decoration: none;
    color: #000;
    /* 清楚超链接的下划线 */
}
.navbar {
    width: 100%;
    height: 70px;
    background-color: #fff;
    /* 盒子阴影 */
    box-shadow: 0 0 5px rgba(0,0,0,.3);
}
.navbar .nav {
    width: 1200px;
    height: 100%;
    /* 让元素自动水平居中 */
    margin: 0 auto;

}
.navbar .nav ul {
    /* 相对定位 */
    position: relative;
    /* 弹性布局 */
    display: flex;
    /* 让子元素平均分配宽度 */
    justify-content: space-around;
    width: 100%;
    height: 100%;

}
.navbar .nav ul > li {
    width: 100%;
    height: 100%;

}
.navbar .nav ul > li > a {
    /* 转化a元素为块级元素 */
    display: block;
    width: 100%;
    height: 100%;
    line-height: 70px;
    text-align: center;


}

.navbar .nav ul > li ol {
    width: 100%;
    background-color: #fff;
    box-shadow: 1px 1px 3px rgba(0,0,0,.2);
    /* 让盒子先沿着y轴缩放到0 也就是隐藏了* */
    transform: scaleY(0);
    /* 设置过渡 */
    transition: all 0.6s;
    /* 我们需要将盒子从上面滑动下来 设置一下中心点即可，也就是设置到
    最上面的中间位置*/
    transform-origin: 50% 0;

}
.navbar .nav ul > li ol li{
    height: 70px;
    border-bottom: 1px solid rgb(245,245,245);

}
.navbar .nav ul > li ol li a {
    display: block;
    width: 100%;
    height: 100%;
    line-height: 70px;
    text-align: center;
}
.navbar .nav ul > li ol li:hover {
    background-color: rgba(0,0,0,.03);
}
.navbar .nav ul > li:hover ol{
    transform: scaleY(1);
}

/* 现在可以设置线条了 */
.navbar .nav ul .underline {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 240px;
    height: 6px;
    /* 设置一下盒子的左上角和右下角的圆角 */
    border-top-left-radius: 6px;
    border-top-right-radius: 6px;

    background-color: #cc3333;
    transition: all 0.5s;
    /* 现在有个问题就是这个线条有点影响鼠标移入li的效果 */
    pointer-events: none;
    /* 这个属性就可以解决 */
}
.navbar .nav ul .underline::before{
    content: "";
    /* 利用::before伪元素设置三角 */
    position: absolute;
    top: -10px;
    /* calc方法可以自动计算数值让盒子居中 */
    left: calc(50% - 9px);
    width: 18px;
    height: 10px;
    /* inhreit可以继承父元素的属性值 */
    background-color: inherit;
    /* 这个属性可以绘制图案，polygon这个属性只需要提供最少三个点就可以将三个点
    连接到一起然后绘制一个图形。两个点的坐标位置（x，y）0 100%这个点
    就是在说在x轴上为0px
    在y轴上为100%就是盒子的高度，x轴的方向是向右 y轴的方向是向下
    那么我们设置三个点然后连接起来就是一个三角形 */
    clip-path: polygon(0 100%,50% 0,100% 100%);
}
.navbar .nav ul > li:nth-child(2):hover ~.underline {
    left: 240px;
    background-color: #ff9933;
}
.navbar .nav ul > li:nth-child(3):hover ~.underline {
    left: 480px;
    background-color: #339933;
}
.navbar .nav ul > li:nth-child(4):hover ~.underline {
    left: 720px;
    background-color: #0099cc;
}
.navbar .nav ul > li:nth-child(5):hover ~.underline {
    left: 960px;
    background-color: #9966cc;
}